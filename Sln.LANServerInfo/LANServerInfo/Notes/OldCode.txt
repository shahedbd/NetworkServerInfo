

Console.WriteLine("AddressList******************");
                var AddressList = hostEntry.AddressList;



                foreach (var item in AddressList)
                {
                    //Console.WriteLine("AddressList: " + item.Address);
                    Console.WriteLine("AddressList: " + item.AddressFamily);
                    Console.WriteLine("AddressList: " + item.IsIPv4MappedToIPv6);
                    Console.WriteLine("AddressList: " + item.IsIPv6LinkLocal);
                    Console.WriteLine("AddressList: " + item.IsIPv6Multicast);
                    Console.WriteLine("AddressList: " + item.IsIPv6SiteLocal);
                    Console.WriteLine("AddressList: " + item.IsIPv6Teredo);
                    Console.WriteLine("AddressList: " + item.ScopeId);

                }


 public static void CHKServer(string strMachineName)
        {
            var ping = new Ping();

            //var Googlereply = ping.Send(GoogleIPAddress, 60 * 1000);

            var reply = ping.Send(strMachineName, 60 * 1000);   // 1 minute time out (in ms)
            // or...
            reply = ping.Send(new IPAddress(new byte[] { 192, 168, 1, 105 }), 3000);
        }



Network:
Ref:
http://weblogs.sqlteam.com/mladenp/archive/2010/11/04/find-only-physical-network-adapters-with-wmi-win32_networkadapter-class.aspx

ManagementObjectSearcher mos = null;
            mos = new ManagementObjectSearcher(@"SELECT * FROM   Win32_NetworkAdapter WHERE  Manufacturer != 'Microsoft' AND NOT PNPDeviceID LIKE 'ROOT\\%'");
            // Get the physical adapters and sort them by their index. 
            // This is needed because they're not sorted by default
            IList<ManagementObject> managementObjectList = mos.Get()
                                                              .Cast<ManagementObject>()
                                                              .OrderBy(p => Convert.ToUInt32(p.Properties["Index"].Value))
                                                              .ToList();

            // Let's just show all the properties for all physical adapters.
            foreach (ManagementObject mo in managementObjectList)
            {
                foreach (PropertyData pd in mo.Properties)
                    Console.WriteLine(pd.Name + ": " + (pd.Value ?? "N/A"));
            }


